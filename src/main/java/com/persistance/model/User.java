package com.persistance.model;
// Generated 30 déc. 2018 16:29:22 by Hibernate Tools 3.4.0.CR1


import java.util.Comparator;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="logmein"
)
public class User  implements java.io.Serializable {


     private Integer idUser;
     private String nameUser;
     private Integer nbReceiveCard;
     private Set<UserCard> userCards = new HashSet<UserCard>(0);
     private Set<GameUser> gameUsers = new HashSet<GameUser>(0);
     private Integer score;

     
    public User() {
    }

    public User(String nameUser, Integer nbReceiveCard, Set<UserCard> userCards, Set<GameUser> gameUsers, Integer score) {
       this.nameUser = nameUser;
       this.nbReceiveCard = nbReceiveCard;
       this.userCards = userCards;
       this.gameUsers = gameUsers;
       this.score= score;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id_user", unique=true, nullable=false)
    public Integer getIdUser() {
        return this.idUser;
    }
    
    public void setIdUser(Integer idUser) {
        this.idUser = idUser;
    }

    
    @Column(name="name_user", length=100)
    public String getNameUser() {
        return this.nameUser;
    }
    
    public void setNameUser(String nameUser) {
        this.nameUser = nameUser;
    }

    
    @Column(name="nb_receive_card")
    public Integer getNbReceiveCard() {
        return this.nbReceiveCard;
    }
    
    public void setNbReceiveCard(Integer nbReceiveCard) {
        this.nbReceiveCard = nbReceiveCard;
    }
    
    
    @Column(name="score")
    public Integer getScore() {
		return score;
	}

	public void setScore(Integer score) {
		this.score = score;
	}

@OneToMany(fetch=FetchType.EAGER, mappedBy="user")
    public Set<UserCard> getUserCards() {
        return this.userCards;
    }
    
    public void setUserCards(Set<UserCard> userCards) {
        this.userCards = userCards;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="user")
    public Set<GameUser> getGameUsers() {
        return this.gameUsers;
    }
    
    public void setGameUsers(Set<GameUser> gameUsers) {
        this.gameUsers = gameUsers;
    }
    
    
    /// Comparator with score for user
    public static Comparator<User> ComparatorScore = new Comparator<User>() {
        public int compare(User u1, User u2) {
            return (int) (u2.getScore() - u1.getScore()  );
        }
    };



}


